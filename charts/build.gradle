plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
    id 'kotlin-kapt'
}
task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier 'sources'
}

android {

    /**
     * 资源同名问题处理
     * 每个子模块给资源名添加前缀，具体做法是在每个子模块的build.gradle文件的android块内添加一行代码：resourcePrefix “资源名前缀”：
     */
    // resourcePrefix "charts_"
    compileSdk Android.compileSdkVersion

    defaultConfig {
        minSdk Android.minSdkVersion
        targetSdk Android.targetSdkVersion
        versionCode Android.versionCode
        versionName Android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true  //压缩优化

            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        useIR = true
        jvmTarget = JavaVersion.VERSION_11
        freeCompilerArgs += ["-Xskip-prerelease-check"]
    }

    afterEvaluate {
        publishing {
            // 当前版本依赖库版本号，这个jitpack不会使用到，只是我们开发者自己查看
            // def versionName = "1.0"
            publications {
                // Creates a Maven publication called "release".
                release(MavenPublication) {
                    // Applies the component for the release build variant.
                    from components.release // 表示发布 release（jitpack 都不会使用到）

                    // You can then customize attributes of the publication as shown below.
                    groupId = 'com.github.R-Gang' // 这个是依赖库的组 id
                    artifactId = 'LineChart' // 依赖库的名称（jitpack 都不会使用到）
                    version = Android.versionName
                }
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api Support.constraintlayout
    api Support.appcompat
    api Support.kotlin_stdlib_jdk8

    // 基类(以上为基类关联依赖)
    api 'com.github.R-Gang:Android-Common:v0.1.6-beta.13.0@aar'
    api 'com.github.R-Gang:Tools-Utils:v1.0.1-beta.1@aar'
    api 'com.github.R-Gang:Easy-Popup:v1.0.0-beta.4'
}

// 打包源码
task androidSourcesJar(type: Jar) {
    if (project.hasProperty("kotlin")) {
        from android.sourceSets.main.java.getSrcDirs()
    } else if (project.hasProperty("android")) {
        from android.sourceSets.main.java.sourceFiles
    } else {
        println project
        from sourceSets.main.allSource
    }
    classifier 'sources'
}